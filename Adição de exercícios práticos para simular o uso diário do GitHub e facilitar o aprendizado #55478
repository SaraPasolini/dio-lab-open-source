
# Melhoria de aprendizado para iniciantes no GitHub






Essa solu√ß√£o foi desenvolvida com o objetivo de demonstrar, de forma clara e eficiente para iniciantes, como:

- Clonar reposit√≥rios diretamente do GitHub.

- Configurar e utilizar o GitHub no VSCode para uma experi√™ncia mais fluida e integrada.

- Aplicar comandos essenciais na pr√°tica, facilitando o entendimento dos conceitos fundamentais do versionamento de c√≥digo.

Desta maneira, os usu√°rios poder√£o aprender de maneira imersiva, enfrentando desafios reais e compreendendo melhor as particularidades da plataforma.

**Observa√ß√µes** : Todo o conte√∫do aqui descrito ser√° aplicado diretamente entre VS Code e no GitHub, sendo implementado nesses ambientes de desenvolvimento.





## Prepara√ß√£o do ambiente com as ferramentas e depend√™ncias necess√°rias.

Para darmos in√≠cio a clonagem de reposit√≥rios e demais atividades √© necess√°rio ter em sua m√°quina as seguintes ferramentas:

- [Visual Studio Code](https://code.visualstudio.com/download) - Dispon√≠vel para Windows, Linux e Mac.

- [GIT](https://git-scm.com/downloads) - Sistema de controle de vers√µes distribu√≠do, dispon√≠vel para Windows, Linux e Mac.

- [GITUB](https://desktop.github.com/download/) - Plataforma que permite o desenvolvimento colaborativo de c√≥digos.

**Observa√ß√µes** : Se voc√™ j√° possu√≠ todas essas depend√™ncias instaladas em sua m√°quina, certifique-se de que est√£o na vers√£o mais recente, ou seja, se est√£o devidamente atualizadas.


## Instalando e configurando o Visual Studio Code

**INSTALA√á√ÉO** 

**1**- Abra seu navegador e acesse o site oficial do VS Code: [Visual Studio Code](https://code.visualstudio.com/download).

**2**- Na p√°gina inicial, clique no bot√£o **Download for** Windows, macOS ou Linux, conforme seu sistema operacional.

**3**- Ap√≥s o download, **abra o instalador** (*.exe* no Windows, .*dmg* no macOS ou o *pacote correspondente* no Linux).

**4**- Marque a op√ß√£o **"Aceito os termos do contrato"** e clique em **Avan√ßar**.

**5**- Escolha a pasta onde deseja instalar o VS Code (ou deixe o padr√£o recomendado).

**6**- Na tela de op√ß√µes adicionais, marque **"Adicionar ao PATH"** (opcional, mas recomendado para usar o VS Code no terminal).

**7**- Clique em Instalar e aguarde o processo ser conclu√≠do,ao finalizar, marque a op√ß√£o **"Executar o Visual Studio Code"** e clique em *Concluir*.

**CONFIGURA√á√ÉO INICIAL** 

- Ao abrir o VS Code pela primeira vez, ele exibir√° sugest√µes de extens√µes √∫teis, voc√™ pode personalizar o tema e instalar extens√µes conforme suas necessidades.

- Se tiver d√∫vidas sobre as extens√µes , consulte : [Gerenciar Extens√µes](https://learn.microsoft.com/pt-br/visualstudio/ide/finding-and-using-visual-studio-extensions?view=vs-2022).


**VERIFICAR A INSTALA√á√ÉO** 

- Para garantir que o VS Code foi instalado corretamente, abra o **terminal** (**Prompt de Comando**, **PowerShell** ou **Terminal do macOS/Linux**) e digite:

```bash
  code --version
```

- Se o n√∫mero da vers√£o for exibido, a instala√ß√£o foi conclu√≠da corretamente.



## Instalando e configurando o Git

**INSTALA√á√ÉO - WINDOWS** 

**1**- Abra seu navegador e acesse o site oficial do [GIT](https://git-scm.com/downloads).

**2**- Clique em **Download for Windows** e baixe o instalador.

**3**- Execute o arquivo *.exe* baixado.

**4**- Durante a instala√ß√£o, mantenha as op√ß√µes padr√£o recomendadas e clique em **Next** at√© concluir.

**Observa√ß√£o:** Certifique-se que a op√ß√£o **Git-Bash** esteja selecionada, leia todas as op√ß√µes com aten√ß√£o.

**5**- Ap√≥s a instala√ß√£o, reinicie o VS Code.


**INSTALA√á√ÉO - macOS (via Homebrew)** 

**1**- Abra o Terminal e digite: 

```bash
  brew install git
```

**2**- Aguarde a instala√ß√£o e depois verifique com :

```bash
  git --version
```


**INSTALA√á√ÉO - Linux (Debian/Ubuntu)** 

**1**- Abra o Terminal e digite: 

```bash
  sudo apt update && sudo apt install git -y
```

**2**- Aguarde a instala√ß√£o e depois verifique com :

```bash
  git --version
```

## Integrando o Git ao VS Code

- Ap√≥s instalar o Git, abra o VS Code.

- No **menu lateral** , clique no √≠cone de *Controle de C√≥digo-Fonte* (parece um "ramo" com tr√™s pontos).

![Image](https://assets.digitalocean.com/articles/git-integration-in-visual-studio-code/6.png)

- Se aparecer a mensagem **"Nenhum reposit√≥rio aberto"**, significa que o Git est√° pronto para uso.

![Image](https://code.visualstudio.com/assets/docs/sourcecontrol/github/git-clone-button.png)

- Agora, voc√™ pode clonar reposit√≥rios do GitHub, fazer commits e sincronizar seus projetos diretamente pelo VS Code.

- Se tiver d√∫vidas ou erros espec√≠ficos , consulte : [Controle de Origem](https://code.visualstudio.com/docs/sourcecontrol/github#sourcecontrol-articles). 


## Configurar o Git com o GitHub

- Antes de come√ßar a usar o GitHub no VS Code, √© necessa√°rio configurar *nome* e *e-mail*.

- Voc√™ pode utilizar o **Git-Bash** do pr√≥prio Git, ou utlizar o terminal do VS CODE.

- Como estamos utilizando o VS CODE , faremos pelo **terminal do VS CODE**.

**1**- No terminal digite :

```bash
  git config --global user.name "Seu Nome"
```


**2**- Depois, configure seu e-mail **(use o mesmo e-mail cadastrado no GitHub)**:

```bash
  git config --global user.email "seuemail@example.com"
```

**3**- Para verificar as configura√ß√µes, use:

```bash
 git config --list
```

- Se as informa√ß√µes aparecerem corretamente, a configura√ß√£o foi bem-sucedida.

## Conectar o GitHub ao VS Code

**1** - Gerar um Token de Acesso no GitHub :

- O VS Code n√£o aceita login direto no GitHub por senha. √â necess√°rio gerar um **Token de Acesso Pessoal (PAT)**

- Acesse : [GITHUB TOKENS](https://github.com/settings/tokens).

- Clique em **Generate new token (classic)**.

- Marque as permiss√µes b√°sicas :

   - **repo** ‚Üí Para acessar reposit√≥rios.
   - **workflow** ‚Üí Para gerenciar a√ß√µes no GitHub.
   - **admin:repo_hook** ‚Üí Para configurar webhooks.

- Role para baixo, clique em *Generate Token* e **copie** o token.


**2** - Autenticar o GitHub no VS Code :

Agora, precisamos usar o token para conectar o GitHub ao VS Code.

- No VS Code, **clique em View** ‚Üí Command Palette **(Ctrl + Shift + P)**.

- Digite **"Git: Clone"** e selecione a op√ß√£o **"Git: Clone"**.

- **Cole a URL** do seu reposit√≥rio GitHub (exemplo: https://github.com/seu-usuario/meu-repositorio.git).

- Escolha uma pasta onde deseja salvar o reposit√≥rio.

- O VS Code pedir√° as **credenciais do GitHub**. No campo **senha**, cole o **Token** de Acesso Pessoal gerado anteriormente.

- Se tudo estiver correto, o reposit√≥rio **ser√° clonado** e estar√° pronto para uso no VS Code.

**Aqui est√° uma outra sugest√£o de como clonar um reposit√≥rio:**

- Entre no reposit√≥rio que deseja clonar, aperte no bot√£o **code** e copie o **link https://** . Como na imagem:

![IMG](https://analisemacro.com.br/wp-content/uploads/2021/11/url_git.png)

- V√° at√© o terminal do VS CODE e digite o seguinte comando:

```bash
 git clone <URL DO SEU REPOSIT√ìRIO> 
```

- Se der tudo certo, as pastass do reposit√≥rio v√£o come√ßar a aparecer no seu VS CODE.


## Usando o GitHub no VS Code

Agora que o GitHub est√° configurado, voc√™ pode **criar**, **versionar** e **enviar** arquivos diretamente pelo VS Code.

- Se quiser criar um novo reposit√≥rio dentro do VS Code , abra o **terminal do VS CODE** e digite:

```bash
 git init 
```
Isso criar√° um reposit√≥rio local.

- Adicione um arquivo (por exemplo, README.md) e salve. No terminal digite:

```bash
 git add README.md
```
Para adicionar todos os arquivos ao reposit√≥rio.

- Agora, fa√ßa o primeiro commit:

```bash
git commit -m "Primeiro commit"
```

**Observa√ß√µes:** Fa√ßa todos esses comandos no **terminal do VS CODE**. Para abrir o terminal: (ctrl + ").

- Crie/Use um reposit√≥rio no GitHub e copie a URL dele.

- Agora , conecte-se com o reposit√≥rio remoto:


```bash
git remote add origin https://github.com/seu-usuario/seu-repositorio.git
```

- Por fim, envie os arquivos para o GitHub:

```bash
git push -u origin main
```

## Fazer Pull, Push e Commit diretamente pelo VS Code

Agora que o reposit√≥rio est√° configurado, podemos gerenciar as altera√ß√µes diretamente pelo VS Code.

- **Fazer Commit:**

    - No VS Code, clique no √≠cone de **Controle de C√≥digo-Fonte** (parece um ramo com tr√™s pontos).
    - Escreva uma mensagem de commit e clique em **Commit**.

![IMG](https://code.visualstudio.com/assets/docs/sourcecontrol/intro/scm-unstage-changes.png)


- Enviar altera√ß√µes para o GitHub **(Push)**:

![IMG](https://sachinsf.com/wp-content/uploads/2021/02/pasted-image-0-16.png)

- Ap√≥s fazer o commit, clique no bot√£o **"Sincronizar mudan√ßas"** ou digite no terminal: 

```bash
git push origin main
```

- Baixar atualiza√ß√µes do reposit√≥rio **(Pull)**:

   - Para obter as √∫ltimas atualiza√ß√µes do reposit√≥rio remoto, clique em **"Pull"** ou use o **terminal**:

```bash
git pull origin main
```

## Criar e Trocar de Branch no VS Code

Se estiver trabalhando com m√∫ltiplas **branches**, voc√™ pode **gerenci√°-las no VS Code**.

- **Criar uma nova branch**:

```bash
git branch nova-branch
```

- **Mudar para a nova branch**: 

```bash
git checkout nova-branch
```

- **Criar e mudar para a nova branch ao mesmo tempo**:

```bash
git checkout -b nova-branch
```

- **Enviar a branch para o GitHub**:

```bash
git push -u origin nova-branch
```

Agora o GitHub est√° totalmente integrado ao VS Code, permitindo:

‚úÖClonar reposit√≥rios diretamente no VS Code.

‚úÖ Realizar commits e push sem precisar usar o terminal.

‚úÖ Gerenciar branches e sincronizar altera√ß√µes facilmente.


## Links √öteis :

- Aqui est√£o links √∫teis para caso de d√∫vidas mais espec√≠ficas ou aprofundamentos por parte do seu interesse: 

    üñáÔ∏è[Documenta√ß√£o do VS CODE](https://code.visualstudio.com/docs).

    üñáÔ∏è[Sobre GitHub e Git](https://docs.github.com/en/get-started/start-your-journey/about-github-and-git).

    üñáÔ∏è[Documenta√ß√£o do GIT](https://git-scm.com/doc).

    üñáÔ∏è[Clonagem de reposit√≥rios (poss√≠veis d√∫vidas)](https://docs.github.com/pt/repositories/creating-and-managing-repositories/cloning-a-repository).


## Desafio Pr√°tico: Dominando o GitHub no VS Code


**Objetivo: Realizar tarefas reais dentro do GitHub e VS Code para refor√ßar o aprendizado**.


- *Tarefa 1: Clonando um Reposit√≥rio*.

Passos:

- No GitHub, **crie um novo reposit√≥rio chamado teste-clonagem**.
- **Copie a URL** do reposit√≥rio.
- No VS Code, abra o Terminal e **clone** o reposit√≥rio usando:

```bash
git clone <URL-do-reposit√≥rio>
```

- Acesse a pasta do reposit√≥rio:

```bash
cd teste-clonagem
```
**Desafio conclu√≠do se: Voc√™ conseguir visualizar a pasta do reposit√≥rio no VS Code.**


- *Tarefa 2: Criar e Enviar um Arquivo para o GitHub*.

Passos:

- No VS Code, dentro da pasta do reposit√≥rio clonado, **crie um arquivo chamado meu-arquivo.txt**.
- **Escrev**a qualquer coisa no arquivo e **salve**.
- No terminal, adicione o arquivo ao Git:

```bash
git add .
```

- Fa√ßa um **commit** com uma mensagem explicativa:

```bash
git commit -m "Adicionando meu primeiro arquivo"
```

- **Envie** para o GitHub:

```bash
git push origin main
```

**Desafio conclu√≠do se: Voc√™ ver o arquivo meu-arquivo.txt no seu reposit√≥rio no GitHub.**

- *Tarefa 3: Atualizar um Arquivo e Fazer Push Novamente*.

Passos:

- No VS Code, **abra o arquivo meu-arquivo.txt** e **adicione** mais texto.
- **Salve** e fa√ßa um **novo commit**:

```bash
git add .
git commit -m "Atualizando o arquivo"
git push origin main
```

**Desafio conclu√≠do se: O arquivo no GitHub mostrar a nova atualiza√ß√£o.**


## Considera√ß√µes  Finais 

Desejo a todos voc√™s um bom estudo! Aqui venho eu tentar solucionar essa sugest√£o e espero ajudar a todos que est√£o com dificuldades.













